syntax = "proto3";
package multistaking.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "multistaking/v1/params.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/staking/v1beta1/staking.proto";
import "amino/amino.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/realiotech/multi-staking/x/multi-staking/types";

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc UpdateMultiStakingParams(MsgUpdateMultiStakingParams)
      returns (MsgUpdateMultiStakingParamsResponse);
  rpc CreateEVMValidator(MsgCreateEVMValidator)
      returns (MsgCreateEVMValidatorResponse);
  rpc DelegateEVM(MsgDelegateEVM) returns (MsgDelegateEVMResponse);
  rpc BeginRedelegateEVM(MsgBeginRedelegateEVM)
      returns (MsgBeginRedelegateEVMResponse);
  rpc UndelegateEVM(MsgUndelegateEVM) returns (MsgUndelegateEVMResponse);
  rpc CancelUnbondingEVMDelegation(MsgCancelUnbondingEVMDelegation)
      returns (MsgCancelUnbondingEVMDelegationResponse);
}

message MsgUpdateMultiStakingParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/evm parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateMultiStakingParamsResponse {}

// MsgCreateEVMValidator defines a message for creating a new validator using
// ERC20 token.
message MsgCreateEVMValidator {
  option (cosmos.msg.v1.signer) = "validator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  cosmos.staking.v1beta1.Description description = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  cosmos.staking.v1beta1.CommissionRates commission = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  string min_self_delegation = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // Deprecated: Use of Delegator Address in MsgCreateValidator is deprecated.
  // The validator address bytes and delegator address bytes refer to the same
  // account while creating validator (defer only in bech32 notation).
  string delegator_address = 4
      [ (cosmos_proto.scalar) = "cosmos.AddressString", deprecated = true ];
  string validator_address = 5
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  google.protobuf.Any pubkey = 6
      [ (cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey" ];
  string contract_address = 7;
  string value = 8 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgCreateEVMValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateEVMValidatorResponse {}

// MsgDelegate defines a SDK message for performing a delegation of coins
// from a delegator to a validator.
message MsgDelegateEVM {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  string contract_address = 3;
  string amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgDelegateResponse defines the Msg/Delegate response type.
message MsgDelegateEVMResponse {}

// MsgBeginRedelegate defines a SDK message for performing a redelegation
// of coins from a delegator and source validator to a destination validator.
message MsgBeginRedelegateEVM {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_src_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  string validator_dst_address = 3
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  string contract_address = 4;
  string amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
message MsgBeginRedelegateEVMResponse {
  google.protobuf.Timestamp completion_time = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];
}

// MsgUndelegate defines a SDK message for performing an undelegation from a
// delegate and a validator.
message MsgUndelegateEVM {
  option (cosmos.msg.v1.signer) = "delegator_address";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  string contract_address = 3;
  string amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUndelegateResponse defines the Msg/Undelegate response type.
message MsgUndelegateEVMResponse {
  google.protobuf.Timestamp completion_time = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.stdtime) = true
  ];

  // amount returns the amount of undelegated coins
  //
  // Since: cosmos-sdk 0.50
  string contract_address = 4;
  string amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message MsgCancelUnbondingEVMDelegation {
  option (cosmos.msg.v1.signer) = "delegator_address";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string delegator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string validator_address = 2
      [ (cosmos_proto.scalar) = "cosmos.ValidatorAddressString" ];
  // amount is always less than or equal to unbonding delegation entry balance
  string contract_address = 3;
  string amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // creation_height is the height which the unbonding took place.
  int64 creation_height = 5;
}

// MsgCancelUnbondingDelegationResponse
//
// Since: cosmos-sdk 0.46
message MsgCancelUnbondingEVMDelegationResponse {}